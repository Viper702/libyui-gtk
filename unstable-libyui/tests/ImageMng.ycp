// Image test
// TODO: make it getting the filename as an argument

{
	UI::OpenDialog (
		`VBox (
			`Heading ("Movie"),
			`ReplacePoint (`id (`replace_image),
				`ColoredLabel (`opt(`hstretch, `vstretch), "Pick an image!",
				               `rgb (0, 0, 0), `rgb (255, 0, 0), 5)
				),

			`VSquash (`HBox (
				`Top (`Frame ("Which MNG file:",
					`RadioButtonGroup (`id(`rb),
						`VBox(
							`Left (`RadioButton(`id (`movie1), `opt(`notify), "&Movie1")),
							`Left (`RadioButton(`id (`movie2), `opt(`notify), "&Movie2")),
							`Left (`RadioButton(`id (`movie3), `opt(`notify), "&Movie3")),
							`Left (`RadioButton(`id (`movie4), `opt(`notify), "&Movie4")),
							`Left (`RadioButton(`id (`movie5), `opt(`notify), "&Movie5")),
							`Left (`RadioButton(`id (`movie6), `opt(`notify), "&Movie6")),
							`Left (`RadioButton(`id (`movie7), `opt(`notify), "&Movie7")),
							`Left (`RadioButton(`id (`movie8), `opt(`notify), "&Movie8"))
							)
						)
					)),

				`Top (`VBox (
					`Frame ("Image effect:",
						`RadioButtonGroup (`id(`rb),
							`VBox(
								`Left (`RadioButton(`id (`no_effect), `opt(`notify), "&None", true)),
								`Left (`RadioButton(`id (`tiled_effect),`opt(`notify), "&Tiled")),
								`Left (`RadioButton(`id (`scaled_effect), `opt(`notify), "&Scaled"))
								)
							)
						),
					`Left (`CheckBox(`id (`enabled), `opt(`notify), "&Enabled", true))
				))
			)),

			`Right (`Label ("Resize the window!")),
			`PushButton(`id (`close), "&Close")
		)
	);

	any ret = nil;
	while (true)
	{
		ret = UI::UserInput();
		if (ret == `close || ret == `cancel)
			break;

		any effect_opt = nil;
		if ((boolean) UI::QueryWidget(`id(`tiled_effect), `Value))
			effect_opt = `tiled;
		else if ((boolean) UI::QueryWidget(`id(`scaled_effect), `Value))
			effect_opt = `scaleToFit;

		// needed for tiling (scaling sets this automatically, anyway...)
		any zerowidth  = nil;
		any zeroheight = nil;
		if (effect_opt != nil) {
			zerowidth = `zeroWidth;
			zeroheight = `zeroHeight;
		}

		string filename = "";
		if ((boolean) UI::QueryWidget(`id(`movie1), `Value))
			filename = "tests/movie1.mng";
		else if ((boolean) UI::QueryWidget(`id(`movie2), `Value))
			filename = "tests/movie2.mng";
		else if ((boolean) UI::QueryWidget(`id(`movie3), `Value))
			filename = "tests/movie3.mng";
		else if ((boolean) UI::QueryWidget(`id(`movie4), `Value))
			filename = "tests/movie4.mng";
		else if ((boolean) UI::QueryWidget(`id(`movie5), `Value))
			filename = "tests/movie5.mng";
		else if ((boolean) UI::QueryWidget(`id(`movie6), `Value))
			filename = "tests/movie6.mng";
		else if ((boolean) UI::QueryWidget(`id(`movie7), `Value))
			filename = "tests/movie7.mng";
		else
			filename = "tests/movie8.mng";

		any enabled_opt = nil;
		boolean check = (boolean) UI::QueryWidget(`enabled, `Value);
		if (!check)
			enabled_opt = `disabled;

		// to test inline images, uncomment next line and pass it to `Image
		//byteblock data = (byteblock) SCR::Read (.target.byte, filename);
		term image = `Image (`id (`image),
			`opt (`animated, effect_opt, enabled_opt, `hstretch, `vstretch),
			filename, filename + " not found");

		UI::ReplaceWidget (`replace_image, image);
	}

	UI::CloseDialog();
}

