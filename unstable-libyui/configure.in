dnl configure.in for yast2-gtk
dnl
dnl -- This file is generated by y2autoconf 2.15.9 - DO NOT EDIT! --
dnl    (edit configure.in.in instead)

AC_INIT(yast2-gtk, 2.15.9, http://bugs.opensuse.org/, yast2-gtk)
dnl Check for presence of file 'RPMNAME'
AC_CONFIG_SRCDIR([RPMNAME])

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_TARGET
dnl Perform program name transformation
AC_ARG_PROGRAM

AC_PREFIX_DEFAULT(/usr)

AM_INIT_AUTOMAKE(tar-ustar) dnl searches for some needed programs

dnl Important YaST2 variables
VERSION="2.15.9"
RPMNAME="yast2-gtk"
MAINTAINER="Ricardo Cruz  <rpmcruz@alunos.dcc.fc.up.pt>   \
Michael Meeks <michael.meeks@novell.com>"

dnl pkgconfig honors lib64
pkgconfigdir=\${libdir}/pkgconfig
pkgconfigdatadir=\${datadir}/pkgconfig
yast2dir=\${prefix}/share/YaST2

ybindir=\${prefix}/lib/YaST2/bin
# FIXME duplicates execcompdir
ystartupdir=\${prefix}/lib/YaST2
plugindir=\${libdir}/YaST2/plugin
includedir=\${prefix}/include/YaST2
potdir=\${docdir}/pot

docdir=\${prefix}/share/doc/packages/$RPMNAME
mandir=\${prefix}/share/man

execcompdir=\${prefix}/lib/YaST2
agentdir=${execcompdir}/servers_non_y2

ydatadir=${yast2dir}/data
imagedir=${yast2dir}/images
themedir=${yast2dir}/theme
localedir=${yast2dir}/locale
clientdir=${yast2dir}/clients
moduledir=${yast2dir}/modules
yncludedir=${yast2dir}/include
schemadir=${yast2dir}/schema
scrconfdir=${yast2dir}/scrconf
desktopdir=\${prefix}/share/applications/YaST2

AC_SUBST(VERSION)
AC_SUBST(RPMNAME)
AC_SUBST(MAINTAINER)

AC_SUBST(pkgconfigdir)
AC_SUBST(pkgconfigdatadir)

AC_SUBST(yast2dir)

AC_SUBST(ybindir)
AC_SUBST(ystartupdir)
AC_SUBST(plugindir)
AC_SUBST(includedir)
AC_SUBST(potdir)
AC_SUBST(execcompdir)

AC_SUBST(docdir)
AC_SUBST(mandir)

AC_SUBST(ydatadir)
AC_SUBST(imagedir)
AC_SUBST(themedir)
AC_SUBST(localedir)
AC_SUBST(clientdir)
AC_SUBST(moduledir)
AC_SUBST(yncludedir)
AC_SUBST(schemadir)
AC_SUBST(scrconfdir)
AC_SUBST(agentdir)
AC_SUBST(desktopdir)

fillupdir_d="/var/adm/fillup-templates"
AC_ARG_WITH(fillupdir,
    AS_HELP_STRING([--with-fillupdir=DIR],
		   [where to place fillup templates (default $fillupdir_d.]),
    [ fillupdir="$withval" ],
    [ fillupdir="$fillupdir_d" ])
AC_SUBST(fillupdir)



dnl Checks for programs.
AC_PROG_INSTALL
dnl The YCP interpreter checks whether dependent ybc files are older
dnl so we must preserve their timestamps
INSTALL="${INSTALL} -p"
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl pkgconfig
AC_ARG_VAR([PKG_CONFIG_PATH], [where to search for pkg-config files])
dnl devtools
dnl ...

dnl no need for AC_ARG_VAR
AC_PATH_PROG(XGETTEXT, xgettext)
if test -z "$XGETTEXT" ; then
    AC_MSG_ERROR(xgettext is missing; please install gettext-devel.)
fi

Y2DEVTOOLS_PREFIX=`pkg-config --print-errors --variable=prefix yast2-devtools`
AC_SUBST(Y2DEVTOOLS_PREFIX)
devtools_ybindir=`pkg-config --print-errors --variable=ybindir yast2-devtools`
devtools_yast2dir=`pkg-config --print-errors --variable=yast2dir yast2-devtools`

dnl producing pkg-config for others?
AM_CONDITIONAL(CREATE_PKGCONFIG, test "x${CREATE_PKGCONFIG}" != x)
AM_CONDITIONAL(CREATE_PKGCONFIG_NOARCH, test "x${CREATE_PKGCONFIG}" = xnoarch)

dbdir=${devtools_yast2dir}/data/docbook
STYLESHEET_HTML=${dbdir}/stylesheets/customize-html.xsl
STYLESHEET_PDF=${dbdir}/stylesheets/customize-fo.xsl
STYLESHEET_CSS=${dbdir}/css/yast2docs.css
STYLESHEET_YDOC=${dbdir}/stylesheets/ydoc.xsl
STYLESHEET_YCPDOC=${dbdir}/stylesheets/ycpdoc.xsl
AC_SUBST(STYLESHEET_HTML)
AC_SUBST(STYLESHEET_PDF)
AC_SUBST(STYLESHEET_CSS)
AC_SUBST(STYLESHEET_YDOC)
AC_SUBST(STYLESHEET_YCPDOC)



AC_PATH_PROG(YDOXYGEN, ydoxygen, false, $PATH:$devtools_ybindir)
if test "$YDOXYGEN" = "false"; then
    AC_MSG_ERROR([ydoxygen is not installed])
fi

AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP

CFLAGS="${CFLAGS} -Wall -Wformat=2 -Wmissing-prototypes"
CXXFLAGS="${CXXFLAGS} -Wall -Wformat=2"

: ${AGENT_LIBADD:='-L$(libdir) -lscr'}
AC_SUBST(AGENT_LIBADD)

AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AM_PROG_LIBTOOL dnl for libraries

dnl generate the config header
AC_CONFIG_HEADERS([config.h]) dnl at the distribution this done

AC_FUNC_ALLOCA
AC_HEADER_STDC


dnl AC_MSG_CHECKING(prefix)
dnl if test "z${prefix}" != "z/usr"; then
dnl   AC_MSG_ERROR(["Only the /usr prefix is supported, sorry. cf. README"])
dnl fi
dnl AC_MSG_RESULT(/usr - good)

dnl pkgconfig
AC_ARG_VAR([PKG_CONFIG_PATH], [where to search for pkg-config files])
dnl devtools
dnl ...
AC_PATH_PROG(PKG_CONFIG, pkg-config)
if test ! -x "$PKG_CONFIG" ; then
   AC_MSG_ERROR([
*** You need the latest pkg-config.
*** Get the latest version of pkg-config from
*** <http://www.freedesktop.org/software/pkgconfig/>.])
fi
AC_SUBST(PKG_CONFIG)

AC_FUNC_ALLOCA
AC_HEADER_STDC

PKG_CHECK_MODULES( ZYPP, libzypp )
AC_SUBST(ZYPP_LIBS)

PKG_CHECK_MODULES( GTK, gtk+-2.0 glib-2.0 gthread-2.0 gobject-2.0 )
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

# TODO: we may want to check if GtkHtml is installed and set its flag
#dnl Check if GtkHtml is installed
#AC_MSG_CHECKING([for gtkhtml])
#PKG_CHECK_MODULES( GTKHTML, libgtkhtml-3.14 )
#AC_SUBST(GTKHTML_CFLAGS)
#AC_SUBST(GTKHTML_LIBS)
#AC_DEFINE(USE_GTKHTML, 1, [will use GtkHtml as the HTML renderer])

PKG_CHECK_MODULES( ZYPP, libzypp )
AC_SUBST(ZYPP_LIBS)

verstxt=`pkg-config --modversion yast2-core`
yast_vers=`echo "$verstxt" | awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
AC_DEFINE_UNQUOTED(YAST2_VERSION, $yast_vers, [yast version for compile conditionals])

PYUI_LIBS='-lpy2UI'
AC_SUBST(PYUI_LIBS)

dnl Checking for new libyui API...
if test $yast_vers -lt 2015012; then
	AC_MSG_ERROR([
*** Version of libyui >= 2.15.12 needed (your version: $verstxt)
*** You can find it on: svn checkout http://svn.opensuse.org/svn/yast/trunk/core/
*** Do "make -f Makefile.cvs" on root
*** Then you just need to compile stuff under libyui,
***     "cd libyui && make && sudo make install"
*** libyui broke compatibility in order to get away from YCP structures,
*** to make it easier for binding.])
fi

AC_OUTPUT([Makefile src/Makefile])

echo "Hello hacker: checkout README while this builds."

