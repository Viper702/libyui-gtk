## custom configure.in.in

## initialize
@YAST2-INIT-COMMON@
@YAST2-INIT-PROGRAM@

## some common checks
@YAST2-CHECKS-COMMON@
@YAST2-CHECKS-PROGRAM@

AC_ARG_WITH(html-engine,
[  --with-html-engine      use a specific html engine to render output.
  			  the default is internal
			  			  
			  Examples:  --with-html-engine=webkit
			             --with-html-engine=gtkhtml
				     --with-html-engine=internal
],,)

dnl AC_MSG_CHECKING(prefix)
dnl if test "z${prefix}" != "z/usr"; then
dnl   AC_MSG_ERROR(["Only the /usr prefix is supported, sorry. cf. README"])
dnl fi
dnl AC_MSG_RESULT(/usr - good)

dnl pkgconfig
AC_ARG_VAR([PKG_CONFIG_PATH], [where to search for pkg-config files])
dnl devtools
dnl ...
AC_PATH_PROG(PKG_CONFIG, pkg-config)
if test ! -x "$PKG_CONFIG" ; then
   AC_MSG_ERROR([
*** You need the latest pkg-config.
*** Get the latest version of pkg-config from
*** <http://www.freedesktop.org/software/pkgconfig/>.])
fi
AC_SUBST(PKG_CONFIG)

AC_FUNC_ALLOCA
AC_HEADER_STDC

PKG_CHECK_MODULES( GTK, gtk+-2.0 glib-2.0 gthread-2.0 gobject-2.0 )
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

use_webkit=false
use_gtkhtml=false
if test "z$with_html_engine" = "zwebkit"; then
	use_webkit=true

	AC_MSG_CHECKING([pkg-config])
	AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

	AC_MSG_CHECKING([for webkit])
	if $PKG_CONFIG --exists webkit-1.0 ; then
		PKG_CHECK_MODULES( WEBKIT, webkit-1.0 )
	else
		PKG_CHECK_MODULES( WEBKIT, WebKitGtk )
	fi
	AC_SUBST(WEBKIT_CFLAGS)
	AC_SUBST(WEBKIT_LIBS)

	AC_DEFINE(USE_WEBKIT, $use_webkit, [will use WebKit as the HTML renderer])
fi
if test "z$with_html_engine" = "zgtkhtml"; then
	use_gtkhtml=true

	AC_MSG_CHECKING([for gtkhtml])
	PKG_CHECK_MODULES( GTKHTML, libgtkhtml-3.14 )
	AC_SUBST(GTKHTML_CFLAGS)
	AC_SUBST(GTKHTML_LIBS)

	AC_DEFINE(USE_GTKHTML, $use_gtkhtml, [will use GtkHtml as the HTML renderer])
fi

AM_CONDITIONAL(WITH_GTKHTML, $use_gtkhtml)
AM_CONDITIONAL(WITH_WEBKIT, $use_webkit)

PKG_CHECK_MODULES( ZYPP, libzypp )
AC_SUBST(ZYPP_LIBS)
verstxt=`pkg-config --modversion libzypp`
zypp_vers=`echo "$verstxt" | awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
AC_DEFINE_UNQUOTED(ZYPP_VERSION, $zypp_vers, [libzypp version for compile conditionals])

verstxt=`pkg-config --modversion yast2-libyui`
yast_vers=`echo "$verstxt" | awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
AC_DEFINE_UNQUOTED(YAST2_VERSION, $yast_vers, [yast version for compile conditionals])

PYUI_LIBS='-lpy2UI'
AC_SUBST(PYUI_LIBS)

AC_OUTPUT([Makefile src/Makefile])

echo "Hello hacker: checkout README while this builds."

