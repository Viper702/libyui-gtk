/* List of missing features, actual bugs and other issues */

= Yast-GTK =

* Short term goals:

** beef up test.sh to improve layout: add -geometry argument ?

* layout - spacing of widgets needs improving

* Import parts of gtkhtml - disable printing, use it for rendering

* ColoredLabel4.ycp test
	wierd change of size when moving sliders
	investigate

* DumbTab
	setSize() and niceSize() don't respect tab menu

* RichText
	o we need to add table support for the package selector.
		Might be nice to use GtkHtml, if available.

* IntField / Slider
	o should only report value change when the widget is stalled.
		To use g_idle functionality.

* Shrinkable option
	o Maybe add some macro for that.
		Some widgets need to report a different nice size than Gtk,
		like with some margin. To be looked together.

* Auto-yast flickering
	after changing modules. To be investigated.

* BarGraph
	Colors should follow user-defined tons,
	maybe based on Evolution's calendar.

* BarGraph / RatioBox
	Let tiny widgets still have some pixels visible for popup menu.

= Yast-Core =

* Crash on example Tree3.ycp
	It's because somehow it assumes tree id to be a string when
	it is something else, causing an assert fault.
	Would be nice to make an actual patch for Yast guys.

* It has been reported that a 80Mb computer is able to proceed during
  all the text mode installation process, but the partition custom
  setup. I suspect this is due to the Yast-core table and not really
  ncurses'. Something that might be nice to see together with the previous
  point... For more information, contact jdd@dodin.org .

* ColorLabel change value
	There should be a setColor() API on the frontend instead of Yast-core
	trying to implement that itself by removing the label and creating
	another.

* Stock images for buttons
	If the ids that YCP apps give have any meaning we might be able to
	just use those...

* Simple dialogs API
	So that we could display native dialogs.

= Yast-GTK Docs =

== Layout ==

* Yast2 sizing:	
    + setSize - recurses down from the 'top' to the bottom widgets
	+ for contained widgets - it triggers pairs of:
	    + setSize, moveChild calls.

* Gtk sizing:
    + gtksizegroup.c:
	+ code always emits the gtk+ size_request signal
	  [ which we should prolly emit ourselves incidentally ]
	+ GtkWidgetAuxInfo's clobbered 'width' / 'height' that
	  override the requisition information
